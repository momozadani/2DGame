[gd_scene load_steps=7 format=3]

[ext_resource type="Texture2D" path="res://_developer/pascal/assets/382f1917bdb35e6-removebg-preview.png" id="1_fl481"]
[ext_resource type="Script" path="res://src/core/resources/weapon_data.gd" id="2_t2sss"]

[sub_resource type="GDScript" id="GDScript_2jlpa"]
script/source = "#class_name Weapon
extends Area2D


@export var data:WeaponData

@export_category(\"Debug\")
@export var is_manual_shooting: bool = false

var attack:bool=false

const HIT_NOTIFICATION: StringName = &\"44c235b2-89f4-4fdb-a257-ad44e7fa5651\"
@onready var _timer: Timer = %Timer
@onready var _pivot: Marker2D = %RotationPoint
@onready var _weaponpivot: Marker2D=%WeaponRotationPoint

var rotation_speed= PI

func _physics_process(delta):
	if is_manual_shooting:
		_pivot.look_at(get_global_mouse_position())
		return
	var closest_enemy = null
	var min_distance = 99999999999999999
	
	var enemies_in_range = get_overlapping_bodies()
	for enemy in enemies_in_range:
		var distance = enemy.global_position.distance_to(_pivot.global_position)
		if distance < min_distance:
			min_distance = distance
			closest_enemy = enemy
	if closest_enemy !=null:
		if attack:
			return
		else:
			var v=closest_enemy.global_position-global_position
			var angle= v.angle()
			var r=global_rotation
			var angle_delta=rotation_speed *delta
			angle=lerp_angle(r,angle,1.0)
			angle=clamp(angle,r - angle_delta, r+ angle_delta)
			global_rotation=angle
		if _timer.is_stopped():
			_timer.start(data.attack_speed)
		return
	elif (!_timer.is_stopped()):
		_timer.stop()
		
func _process(delta):
	if !is_manual_shooting:
		return

	if Input.is_action_pressed(\"left_mouse\"):
		if !_timer.is_stopped():
			return

func _on_timer_timeout():
	_timer.stop()
	if is_manual_shooting:
		return
	attack=true
	if _weaponpivot.rotation_degrees >= 180:
		while _weaponpivot.rotation_degrees >=0:
			_weaponpivot.rotation_degrees -= 10
			await get_tree().create_timer(0.0003).timeout
		attack=false
	else:
		while _weaponpivot.rotation_degrees <=180:
			_weaponpivot.rotation_degrees += 10
			await get_tree().create_timer(0.0003).timeout
		attack=false

func _on_body_entered(body: Node2D) -> void:
	Notifications.notify(HIT_NOTIFICATION, [self, data, body])

"

[sub_resource type="Resource" id="Resource_py2rw"]
script = ExtResource("2_t2sss")
id = 0
name = ""
full_name = ""
description = ""
damage = 9
attack_speed = 2.0
cooldown = 0.0
attack_range = 0.0
targets = 0
count = 0
is_fixed = false
pattern = 0
deviation = 0
projectile_speed = 0
size_multiplier = 1.0
bounces = 0
pierce = 0
return_to_player = false

[sub_resource type="CircleShape2D" id="CircleShape2D_8v2xl"]
radius = 263.059

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_v03l4"]
radius = 74.0741
height = 396.825

[node name="WeaponBase" type="Area2D"]
collision_layer = 0
collision_mask = 2
script = SubResource("GDScript_2jlpa")
data = SubResource("Resource_py2rw")

[node name="Range" type="CollisionShape2D" parent="."]
position = Vector2(-1, -3)
shape = SubResource("CircleShape2D_8v2xl")

[node name="RotationPoint" type="Marker2D" parent="."]
unique_name_in_owner = true
position = Vector2(0, -1)

[node name="WeaponRotationPoint" type="Marker2D" parent="RotationPoint"]
unique_name_in_owner = true

[node name="Weapon" type="Sprite2D" parent="RotationPoint/WeaponRotationPoint"]
position = Vector2(5.00001, -106)
rotation = 0.785398
scale = Vector2(0.378, 0.378)
texture = ExtResource("1_fl481")

[node name="Hitbox" type="Area2D" parent="RotationPoint/WeaponRotationPoint/Weapon"]
position = Vector2(-3.74133, 11.2239)
rotation = -0.785398

[node name="Hitbox" type="CollisionShape2D" parent="RotationPoint/WeaponRotationPoint/Weapon/Hitbox"]
unique_name_in_owner = true
position = Vector2(1.26362e-05, 0)
shape = SubResource("CapsuleShape2D_v03l4")

[node name="Timer" type="Timer" parent="."]
unique_name_in_owner = true

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
